<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.yummy.delivery.mapper.UserMapper">

    <insert id="insertUser" parameterType="com.yummy.delivery.mapper.UserMapper" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (email, password, name, phone, address, created_at, updated_at) VALUES(#{email}, #{password}, #{name}, #{phone}, #{address}, #{createdAt}, #{updatedAt})
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>

    <insert id="insertGrade" parameterType="com.yummy.delivery.mapper.UserMapper" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO grade (user_id, count, grade) VALUES(#{userId}, #{count}, #{grade})
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>

    <delete id="deleteUser" parameterType="String">
        DELETE FROM user WHERE email = #{email}
    </delete>

   <select id="isExistsEmail" resultType="boolean">
        SELECT EXISTS
        (SELECT email FROM user WHERE email = #{email})
    </select>

    <select id="findStoreListByCategory" parameterType="String" resultType="hashMap">
        SELECT name, category, phone, address, B.email from store A inner join seller B on A.seller_id = B.id where category = #{category};
    </select>

    <select id="findAll" parameterType="Long" resultType="com.yummy.delivery.dto.UserDTO">
        SELECT email, name, phone, address FROM user WHERE id = #{id}
    </select>


<!--    <select id="findByEmail" resultType="String">-->
<!--        SELECT * FROM USER WHERE email = #{email}-->
<!--    </select>-->

    <!-- <select id="selectUserInfo" resultType="com.flab.makedel.dto.UserInfoDTO">
        SELECT id, name, phone, address
        FROM USER WHERE id = #{id}
    </select>

    <select id="selectUserById" resultType="com.flab.makedel.dto.UserDTO">
        SELECT id, password, email, name, phone, address, level, created_at, updated_at
        FROM USER WHERE id = #{id}
    </select>



    <update id="updateUserPassword" parameterType="String">
        UPDATE USER SET password = #{newPassword} , updated_at = NOW()
        WHERE id = #{id}
    </update>-->

</mapper>



<!--<select id="getUserProfile" parameterType="yummydelivery.yummydelivery.mapper.UserProfileMapper">-->
<!--SELECT * FROM UserProfile WHERE id=#{id}-->
<!--</select>-->

<!--<select id="getUserProfileList" resultType="List">-->
<!--SELECT * FROM UserProfile-->
<!--</select>-->

<!--<insert id="insertUserProfile" parameterType="yummydelivery.yummydelivery.mapper.UserProfileMapper">-->
<!--INSERT INTO UserProfile VALUES(#{id}, #{name}, #{phone}, #{address})-->
<!--</insert>-->
